apiVersion: apps/v1  # Specifies that this configuration is for an application deployment (v1 of the apps API group).
kind: Deployment  # Declares the resource type, which is a Deployment.
metadata:
  name: book-catalog-deployment  # The name of this deployment, used to identify the deployment in the cluster.
spec:
  replicas: 2  # The number of pod replicas to run, ensuring high availability.
  selector:
    matchLabels:
      app: book-catalog  # This label selector is used to match the pods created by this deployment. Only pods with this label will be controlled by this deployment.
  template:
    metadata:
      labels:
        app: book-catalog  # Labels applied to the pods created by this deployment for easy identification and management.
    spec:
      containers:
      - name: book-catalog-container  # The name of the container running inside the pod.
        image: bhageriadevesh/book_catalog_image:latest  # The container image to be used. This image contains your book catalog application.
        ports:
        - containerPort: 80  # The container exposes port 80 for HTTP traffic, which is mapped to the service's port.
        env:
        - name: DATABASE_URL  # Specifies an environment variable named DATABASE_URL for the container.
          value: "postgresql://task6_i4ny_user:k43vJY2e0dxIUPVq8vOX8nwM98a5Ki1O@dpg-crnut4m8ii6s73f0ai00-a.oregon-postgres.render.com:5432/task6_i4ny"
          # This environment variable contains the URL needed by the container to connect to the PostgreSQL database.
          # Format: postgresql://<username>:<password>@<host>:<port>/<database>
          # username = task6_i4ny_user
          # password = k43vJY2e0dxIUPVq8vOX8nwM98a5Ki1O
          # host = dpg-crnut4m8ii6s73f0ai00-a.oregon-postgres.render.com
          # port = 5432
          # database = task6_i4ny
---
apiVersion: v1  # The API version for services is v1.
kind: Service  # Declares that this resource is a Service.
metadata:
  name: book-catalog-service  # The name of the service, used to expose the book catalog deployment to the outside world.
spec:
  type: NodePort  # The service type is NodePort, which exposes the service on a specific port on all nodes in the cluster.
  selector:
    app: book-catalog  # The service matches pods labeled with `app: book-catalog`, ensuring it forwards traffic to the correct pods.
  ports:
    - protocol: TCP  # The communication protocol used is TCP.
      port: 80  # The port that the service exposes inside the cluster. It will forward traffic to this port from the clients.
      targetPort: 80  # The port on the container that the service should forward traffic to. It forwards to the container's exposed port.
      nodePort: 30001  # The external port on the node (host) where this service will be accessible (e.g., via localhost:30008).
